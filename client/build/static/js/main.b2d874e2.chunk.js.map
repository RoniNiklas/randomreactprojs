{"version":3,"sources":["FitnessApp/services/timer.js","Wolt/Components/RestaurantItem/RestaurantItem.js","Wolt/services/restaurant.js","Wolt/Components/RestaurantList/RestaurantList.js","Wolt/Components/RestaurantRandomizer/RestaurantRandomizer.js","Wolt/WoltApp.js","components/Menu/Menu.js","components/ComponentItem/ComponentItem.js","components/Front/Front.js","Eficode/utils/map.js","Eficode/Components/Map/Map.js","Eficode/utils/time.js","Eficode/utils/leg.js","Eficode/Components/LegEntry/LegEntry.js","Eficode/Components/ItineraryEntry/ItineraryEntry.js","Eficode/utils/itineraries.js","Eficode/Components/ItinerariesTab/ItinerariesTab.js","Eficode/Components/InputForm/InputForm.js","Eficode/services/hslApi.js","Eficode/EficodeApp.js","FitnessApp/services/sound.js","FitnessApp/Components/Timer/TimerForm/TimerForm.js","FitnessApp/Components/Timer/TimerInfo/TimerInfo.js","FitnessApp/Components/Timer/MuteButton/MuteButton.js","FitnessApp/Components/Timer/ShowFormButton/ShowFormButton.js","FitnessApp/Components/Timer/TimerPresets/TimerPresets.js","FitnessApp/Components/Timer/ButtonGroup/ButtonGroup.js","FitnessApp/Components/Timer/TimerBase/Timer.js","FitnessApp/Components/Menu/Menu.js","FitnessApp/services/weight.js","FitnessApp/Components/WeightCalculator/WeightCalculator.js","FitnessApp/FitnessApp.js","App.js","index.js","data/whistle.wav"],"names":["callback","RestaurantItem","restaurant","useState","image","setImage","useEffect","loadedImage","Image","loadImage","a","onload","src","Card","className","Img","alt","as","hash","blurhash","width","height","resolutionX","resolutionY","Header","name","Text","description","style","backgroundColor","online","nameCompare","b","nameA","toUpperCase","nameB","comparison","restaurantsJSON","restaurants","order","sort","reverse","RestaurantList","restaurantState","setRestaurantState","event","sortedRestaurants","restaurantService","target","value","Button","variant","onClick","map","key","RestaurantRandomizer","setRestaurant","roll","e","preventDefault","start","Math","floor","random","length","i","snd","Audio","volume","play","Promise","r","setTimeout","min","WoltApp","setRestaurants","Menu","components","Navbar","collapseOnSelect","bg","expand","Brand","Link","href","to","Toggle","aria-controls","Collapse","id","Nav","component","path","ComponentItem","Body","Footer","Front","mode","legGeometry","poly","decode","RouteMap","bounds","end","Map","boundsOptions","padding","maxZoom","attributionControl","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","animate","easeLinearity","tileSize","zoomOffset","TileLayer","attribution","url","Marker","position","Popup","Polyline","dashArray","positions","mapUtil","color","milliseconds","date","Date","getHours","getMinutes","toString","leg","max","from","lat","lon","parseEndLocation","charAt","substr","toLowerCase","trip","routeShortName","round","distance","timeUtil","startTime","endTime","duration","LegEntry","index","legUtils","points","ItineraryEntry","itinerary","legs","ItinerariesTab","tabKey","setKey","itineraries","Tabs","activeKey","onSelect","k","mountOnEnter","unmountOnExit","Tab","eventKey","title","itinerariesUtil","InputForm","setLocation","getItineraries","Form","onSubmit","type","alignSelf","Group","Label","Control","placeholder","onChange","createItineraryQuery","fetchItineraries","axios","post","headers","response","fetchedItineraries","data","plan","getLocationCoordinates","text","get","coordinates","features","geometry","coords","latitude","longitude","EficodeApp","setItineraries","location","error","setError","loading","setLoading","handleItineraries","fetchAndHandleItineraries","hslApiService","navigator","geolocation","getCurrentPosition","console","log","Alert","Spinner","animation","role","muted","localStorage","getItem","whistle","newMuted","setItem","defaultPresets","workTime","restTime","sets","getPresets","JSON","parse","presets","stringify","echo","addPreset","preset","newIndex","subscribeWith","stateCallback","unsubscribe","reset","TimerForm","currentlyResting","timerIsActive","setTimeLeft","setWorkTime","setSets","setSetsLeft","setRestTime","setName","controlId","disabled","test","replace","newName","trim","timerService","saveAsPreset","TimerInfo","setsLeft","timeLeft","MuteButton","soundService","setMuted","ShowFormButton","showForm","setShowForm","TimerPresets","setPresets","Dropdown","Item","ButtonGroup","setTimerIsActive","Timer","setCurrentlyResting","timeoutHandle","useRef","activeRef","current","clearTimeout","window","pathname","weight","Number","WeightCalculator","kg","setKg","lb","setLb","percentage","setPercentage","setMax","InputGroup","Append","weightService","FitnessApp","exact","render","App","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b2d874e2.chunk.js","sourcesContent":["let callback\nlet defaultPresets = [\n    {\n        index: 0,\n        name: \"Tabata\",\n        workTime: 20,\n        restTime: 10,\n        sets: 8\n    },\n    {\n        index: 1,\n        name: \"60 on, 30 off\",\n        workTime: 60,\n        restTime: 30,\n        sets: 4\n    }\n]\n\nconst getPresets = () => {\n    if (localStorage.getItem(\"timerPresets\")) {\n        return JSON.parse(localStorage.getItem('timerPresets'))\n    }\n    const presets = defaultPresets\n    localStorage.setItem(\"timerPresets\", JSON.stringify(presets))\n    return presets\n}\n\nconst addPreset = (preset) => {\n    localStorage.setItem(\"timerPresets\", JSON.stringify([...getPresets(), preset]))\n}\n\nconst subscribeWith = (stateCallback) => {\n    callback = stateCallback\n}\n\nconst unsubscribe = () => {\n    callback = (...args) => { return }\n}\n\nconst echo = (value) => {\n    callback(value)\n}\n\nconst newIndex = () => {\n    const presets = getPresets()\n    return (presets[presets.length - 1].index) + 1\n}\n\nconst reset = () => {\n    localStorage.setItem(\"timerPresets\", JSON.stringify(defaultPresets))\n    echo(defaultPresets)\n}\n\nexport default { getPresets, addPreset, newIndex, subscribeWith, unsubscribe, echo, reset }\n","import React, { useState, useEffect } from 'react'\r\nimport Card from \"react-bootstrap/Card\"\r\nimport \"./RestaurantItem.css\"\r\nimport { Blurhash } from \"react-blurhash\"\r\n\r\nconst RestaurantItem = ({ restaurant }) => {\r\n    const [image, setImage] = useState()\r\n    useEffect(() => {\r\n        const loadedImage = new Image()\r\n        if (restaurant.loadImage) {\r\n            const loadImage = async () => {\r\n                loadedImage.onload = () => { setImage(loadedImage) }\r\n                loadedImage.src = restaurant.image\r\n            }\r\n            loadImage()\r\n        } else setImage()\r\n        return () => {\r\n            loadedImage.onload = () => {}\r\n        }\r\n    }, [restaurant])\r\n\r\n    return (\r\n        <Card className=\"card bg-light text-black restaurantItem\">\r\n            {image && restaurant.loadImage\r\n                ? <Card.Img src={image.src} className=\"restaurantImage\" alt=\"Card image\" />\r\n                : <Blurhash as={Card.Img}\r\n                    hash={restaurant.blurhash}\r\n                    width=\"100%\"\r\n                    height=\"240px\"\r\n                    resolutionX={64}\r\n                    resolutionY={64}\r\n                />\r\n            }\r\n            <Card.Header className=\"restaurantHeader\">{restaurant.name}</Card.Header>\r\n            <Card.Text className=\"description\">\r\n                {restaurant.description}\r\n            </Card.Text>\r\n            <Card.Text className=\"open\" style={{ backgroundColor: restaurant.online ? \"green\" : \"red\" }}>\r\n                {restaurant.online ? \"Open\" : \"Closed\"}\r\n            </Card.Text>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default RestaurantItem","import restaurantsJSON from \"../data/restaurants\"\r\n\r\nconst getAll = () => {\r\n    const restaurants = restaurantsJSON.restaurants\r\n    return restaurants\r\n}\r\n\r\nconst nameCompare = (a, b) => {\r\n    const nameA = a.name.toUpperCase()\r\n    const nameB = b.name.toUpperCase()\r\n\r\n    let comparison = 0\r\n    if (nameA > nameB) {\r\n        comparison = 1\r\n    } else if (nameA < nameB) {\r\n        comparison = -1\r\n    }\r\n    return comparison\r\n}\r\n\r\nconst sort = (restaurants, order) => {\r\n    return order === \"alphabetically\"\r\n        ? [...restaurants].sort(nameCompare)\r\n        : [...restaurants].sort(nameCompare).reverse()\r\n}\r\nexport default { getAll, sort }","import React, { useState } from 'react'\r\nimport RestaurantItem from \"../RestaurantItem/RestaurantItem\"\r\nimport restaurantService from \"../../services/restaurant\"\r\nimport Button from 'react-bootstrap/Button'\r\nimport \"./RestaurantList.css\"\r\n\r\nconst RestaurantList = ({ restaurants }) => {\r\n    const [restaurantState, setRestaurantState] = useState(restaurants)\r\n\r\n    const sort = (event) => {\r\n        const sortedRestaurants = restaurantService.sort(restaurants, event.target.value)\r\n        setRestaurantState(sortedRestaurants)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Or select from all restaurants</h2>\r\n            <div className=\"buttonRow\">\r\n                <Button variant=\"primary\" value=\"alphabetically\" className=\"sorting-button\" onClick={sort}>Sort alphabetically from A to Z</Button>\r\n                <Button variant=\"primary\" value=\"in-reverse\" className=\"sorting-button\" onClick={sort}>Sort alphabetically from Z to A</Button>\r\n            </div>\r\n            <div className=\"restaurant-list\">\r\n                {restaurantState.map(restaurant => <RestaurantItem key={restaurant.name} restaurant={{ ...restaurant, loadImage: true }} />)}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RestaurantList","import React, { useState } from \"react\"\r\nimport RestaurantItem from \"../RestaurantItem/RestaurantItem\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport \"./RestaurantRandomizer.css\"\r\n\r\nconst RestaurantRandomizer = ({ restaurants }) => {\r\n\r\n    const [restaurant, setRestaurant] = useState()\r\n\r\n    const roll = async (e) => {\r\n        e.preventDefault()\r\n        let start = Math.floor(Math.random() * restaurants.length)\r\n        let i;\r\n        for (i = 0; i < 28; i++) {\r\n          start = (start + 1) > (restaurants.length - 1) ? 0 : start + 1\r\n          var snd = new Audio(\"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\r\n          snd.volume = 0.1\r\n          snd.play();\r\n          setRestaurant({...restaurants[start], loadImage:false})\r\n          await new Promise(r => setTimeout(r, Math.min(300, i * 0.05 * 300)));\r\n        }\r\n        setRestaurant({...restaurants[start], loadImage:true})\r\n      }\r\n\r\n    return (\r\n        <div className=\"restaurant-randomizer\">\r\n            <h2>Roll a random restaurant</h2>\r\n            <Button variant=\"primary\" onClick={roll}>Roll</Button>\r\n            {restaurant && <RestaurantItem restaurant={restaurant} />}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default RestaurantRandomizer","import React, { useState, useEffect } from 'react'\r\nimport RestaurantList from './Components/RestaurantList/RestaurantList'\r\nimport RestaurantRandomizer from \"./Components/RestaurantRandomizer/RestaurantRandomizer\"\r\nimport restaurantService from \"./services/restaurant\"\r\nimport \"./WoltApp.css\"\r\n\r\nconst WoltApp = () => {\r\n    const [restaurants, setRestaurants] = useState()\r\n    useEffect(() => {\r\n        setRestaurants(restaurantService.getAll())\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"woltapp-root\">\r\n            {restaurants && <RestaurantRandomizer restaurants={restaurants} />}\r\n            {restaurants && <RestaurantList restaurants={restaurants} />}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default WoltApp","import React from \"react\"\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from \"react-bootstrap/Navbar\"\nimport { Link } from \"react-router-dom\"\nimport \"./Menu.css\"\n\nconst Menu = ({ components }) => {\n    return (\n        <Navbar className=\"menu\" collapseOnSelect bg=\"light\" expand=\"lg\">\n            <Navbar.Brand as={Link} href='#' to='/'>Random collection</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    {components &&\n                        components.map(component => {\n                            return (\n                                <Nav.Link as={Link} key={component.id} href='#' to={component.path}>\n                                    {component.name}\n                                </Nav.Link>\n                            )\n                        })\n                    }\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar >\n    )\n}\n\nexport default Menu","import React from \"react\"\nimport Card from \"react-bootstrap/Card\"\nimport { Link } from \"react-router-dom\"\nimport \"./ComponentItem.css\"\n\nconst ComponentItem = ({ component }) => {\n    return (\n        <Card className=\"componentItem\">\n            <Card.Header>\n                <strong className=\"mr-auto\">{component.name}</strong>\n            </Card.Header>\n            <Card.Body>\n                {component.description}\n            </Card.Body>\n            <Card.Footer>\n                <Link to={component.path}>Go to app</Link>\n            </Card.Footer>\n        </Card>\n    )\n}\n\nexport default ComponentItem","import React from \"react\"\nimport ComponentItem from \"../ComponentItem/ComponentItem\"\nimport \"./Front.css\"\n\nconst Front = ({components}) => {\n    return (\n        <div className=\"front-root\">\n            <p> Below, you'll find a list of different random small react projects I've done. These can also be reached via the menu bar above. </p>\n            <div className=\"component-listing\">\n                {components.map(component => <ComponentItem key={component.id} component={component} />)}\n            </div>\n        </div>\n    )\n}\n\nexport default Front","import poly from \"@mapbox/polyline\"\r\n\r\nconst decodeRoute = (legGeometry) => {\r\n    return poly.decode(legGeometry)\r\n}\r\n\r\nconst colorModeMatcher = (mode) => {\r\n    switch (mode.toUpperCase()) {\r\n        case \"WALK\": {\r\n            return \"#6ba3af\"\r\n        }\r\n        case \"RAIL\": {\r\n            return \"#8c4799\"\r\n        }\r\n        case \"TRAM\": {\r\n            return \"#00985f\"\r\n        }\r\n        case \"SUBWAY\": {\r\n            return \"#ff6319\"\r\n        }\r\n        case \"FERRY\": {\r\n            return \"#00b9e4\"\r\n        }\r\n        default: {\r\n            return \"#007ac9\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default { colorModeMatcher, decodeRoute }","import React from \"react\"\r\nimport { Map, TileLayer, Marker, Popup, Polyline } from \"react-leaflet\"\r\nimport mapUtil from \"../../utils/map\"\r\nimport \"./Map.css\"\r\n\r\nconst RouteMap = ({ bounds, start, end, legGeometry, mode }) => {\r\n\r\n    return (\r\n        <Map\r\n            bounds={bounds}\r\n            boundsOptions={{ padding: [40, 40] }}\r\n            maxZoom={18}\r\n            attributionControl={true}\r\n            zoomControl={true}\r\n            doubleClickZoom={true}\r\n            scrollWheelZoom={true}\r\n            dragging={true}\r\n            animate={true}\r\n            easeLinearity={0.35}\r\n            tileSize={512}\r\n            zoomOffset={-1}\r\n        >\r\n            <TileLayer\r\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\r\n                url=\"https://cdn.digitransit.fi/map/v1/hsl-map/{z}/{x}/{y}.png\"\r\n            />\r\n            <Marker position={start}>\r\n                <Popup>\r\n                    Start location\r\n                </Popup>\r\n            </Marker>\r\n            <Marker position={end}>\r\n                <Popup>\r\n                    End location\r\n                </Popup>\r\n            </Marker>\r\n            <Polyline\r\n                dashArray={mode === \"WALK\" ? \"5\" : \"0\"}\r\n                positions={mapUtil.decodeRoute(legGeometry)}\r\n                color={mapUtil.colorModeMatcher(mode)} />\r\n        </Map>\r\n    )\r\n}\r\n\r\nexport default RouteMap\r\n","const parseTime = (milliseconds) => {\r\n    const date = new Date(milliseconds)\r\n    return date.getHours() + \":\" + (date.getMinutes().toString().length === 1 ? \"0\" + date.getMinutes() : date.getMinutes())\r\n}\r\n\r\nexport default { parseTime }","import timeUtil from \"./time\"\r\n\r\nconst calculateBounds = (leg) => {\r\n    return [\r\n        [Math.max(leg.from.lat, leg.to.lat), Math.min(leg.from.lon, leg.to.lon)],\r\n        [Math.min(leg.from.lat, leg.to.lat), Math.max(leg.from.lon, leg.to.lon)]\r\n    ]\r\n}\r\n\r\nconst parseStartLocation = (name) => {\r\n    return name === \"Origin\" ? \"Starting location\" : name\r\n}\r\n\r\nconst parseEndLocation = (name) => {\r\n    return name === \"Destination\" ? \"the Eficode Offices\" : name\r\n}\r\n\r\nconst parseFromToInfo = (leg) => {\r\n    const start = parseStartLocation(leg.from.name)\r\n    const end = parseEndLocation(leg.to.name)\r\n    return \". \" + start + \" to \" + end\r\n}\r\n\r\nconst parseTimeInfo = (leg) => {\r\n    const startTime = timeUtil.parseTime(leg.startTime)\r\n    const endTime = timeUtil.parseTime(leg.endTime)\r\n    return startTime + \"-\" + endTime + \" (around \" + Math.round(leg.duration / 60) + \" minutes)\"\r\n}\r\n\r\nconst parseDirections = (leg) => {\r\n    const mode = leg.mode === \"RAIL\" ? \"Train\" : leg.mode\r\n    const directions = mode.charAt(0).toUpperCase() + mode.substr(1).toLowerCase() + (leg.trip ? \" (\" + leg.trip.routeShortName + \")\" : \"\") + \" for \" + Math.round(leg.distance/100) / 10 + \"km\"\r\n    return directions\r\n}\r\n\r\nexport default { calculateBounds, parseFromToInfo, parseDirections, parseTimeInfo }","import React from \"react\"\r\nimport Map from \"../Map/Map\"\r\nimport Card from \"react-bootstrap/Card\"\r\nimport legUtils from \"../../utils/leg\"\r\nimport \"./LegEntry.css\"\r\n\r\nconst LegEntry = ({ index, leg }) => {\r\n\r\n    return (\r\n        <div className=\"legEntry\">\r\n            <Card className=\"legEntry-card\">\r\n                <Card.Header>\r\n                    {index + 1 + legUtils.parseFromToInfo(leg)}\r\n                </Card.Header>\r\n                <Card.Header>\r\n                    {legUtils.parseTimeInfo(leg)}\r\n                </Card.Header>\r\n                <Card.Header>\r\n                    {legUtils.parseDirections(leg)}\r\n                </Card.Header>\r\n                <Map key={leg.legGeometry.points} bounds={legUtils.calculateBounds(leg)} start={[leg.from.lat, leg.from.lon]} end={[leg.to.lat, leg.to.lon]} legGeometry={leg.legGeometry.points} mode={leg.mode} />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LegEntry\r\n","import React from \"react\"\r\nimport LegEntry from \"../LegEntry/LegEntry\"\r\nimport \"./ItineraryEntry.css\"\r\n\r\nconst ItineraryEntry = ({ itinerary }) => {\r\n    return (\r\n        <>\r\n            {itinerary.legs.map((leg, index) => <LegEntry key={index} index={index} leg={leg} />)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItineraryEntry\r\n","import timeUtil from \"./time\"\r\n\r\nconst parseTitle = (index, itinerary) => {\r\n    return \"Option \" + (index + 1) + \" (\" + timeUtil.parseTime(itinerary.legs[0].startTime) + \"-\" + timeUtil.parseTime(itinerary.legs[itinerary.legs.length - 1].endTime) + \")\"\r\n}\r\n\r\nexport default { parseTitle }","import React from \"react\"\r\nimport Tabs from \"react-bootstrap/Tabs\"\r\nimport Tab from \"react-bootstrap/Tab\"\r\nimport ItineraryEntry from \"../ItineraryEntry/ItineraryEntry\"\r\nimport itinerariesUtil from \"../../utils/itineraries\"\r\nimport \"./ItinerariesTab.css\"\r\n\r\nconst ItinerariesTab = ({ tabKey, setKey, itineraries }) => {\r\n\r\n    return (\r\n        <>\r\n            <Tabs\r\n                activeKey={tabKey}\r\n                onSelect={k => setKey(k)}\r\n                mountOnEnter={true}\r\n                unmountOnExit={true}         \r\n            >\r\n                {itineraries.map((itinerary, index) => {\r\n                    return (\r\n                        <Tab className=\"itineraryTab\" key={index} eventKey={index} title={itinerariesUtil.parseTitle(index, itinerary)}>\r\n                            <ItineraryEntry key={index} index={index} itinerary={itinerary} />\r\n                        </Tab>\r\n                    )\r\n                })}\r\n            </Tabs>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItinerariesTab\r\n","import React from \"react\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport \"./InputForm.css\"\r\n\r\nconst InputForm = ({ setLocation, getItineraries }) => {\r\n    return (\r\n        <Form\r\n            className=\"form\"\r\n            onSubmit={getItineraries}\r\n        >\r\n            <Button type=\"submit\" style={{alignSelf:\"center\"}}>GET ME TO WORK</Button>\r\n            <Form.Group>\r\n                <Form.Label>Enter your location</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Your Location\"\r\n                    onChange={(event) => setLocation(event.target.value)}\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                    Suitable inputs include addresses, place names, and unique places like Tuomiokirkko. If this is left empty, the app will try to use your location data instead.\r\n                 </Form.Text>\r\n            </Form.Group>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default InputForm\r\n","import axios from \"axios\"\r\n\r\nconst createItineraryQuery = (lat, lon) => {\r\n    return (`\r\n    {\r\n        plan(\r\n            from: { lat: ${lat}, lon: ${lon} }\r\n          to: { lat: 60.169447, lon: 24.925796 }\r\n          numItineraries: 3\r\n        ) {\r\n            itineraries {\r\n                legs {\r\n                    startTime\r\n                    endTime\r\n                    mode\r\n                    trip {\r\n                        routeShortName\r\n                    }\r\n                    duration\r\n                    distance\r\n                    from {\r\n                        name\r\n                        lat\r\n                        lon\r\n                        stop {\r\n                            name\r\n                        }\r\n                    }\r\n                    to {\r\n                        name\r\n                        lat\r\n                        lon\r\n                        stop {\r\n                            name\r\n                        }\r\n                    }\r\n                    legGeometry {\r\n                        length\r\n                        points\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }`\r\n    )\r\n}\r\n\r\nconst fetchItineraries = async (lat, lon) => {\r\n    const response = await axios.post(\r\n        \"https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql\",\r\n        createItineraryQuery(lat, lon),\r\n        {\r\n            headers: { \"Content-Type\": \"application/graphql\" },\r\n        })\r\n    const fetchedItineraries = response.data.data.plan.itineraries\r\n    return fetchedItineraries\r\n}\r\n\r\nconst getLocationCoordinates = async (text) => {\r\n    const response = await axios.get(\"https://api.digitransit.fi/geocoding/v1/search?text=\" + text + \"&boundary.circle.lat=60.169447&boundary.circle.lon=24.925796&boundary.circle.radius=50\")\r\n    const coordinates = response.data.features[0].geometry.coordinates\r\n    return {coords:{latitude: coordinates[1], longitude:coordinates[0]}}\r\n}\r\n\r\nexport default { fetchItineraries, getLocationCoordinates }","import React, { useState } from 'react'\nimport Alert from \"react-bootstrap/Alert\"\nimport Spinner from \"react-bootstrap/Spinner\"\nimport ItinerariesTab from \"./Components/ItinerariesTab/ItinerariesTab\"\nimport InputForm from \"./Components/InputForm/InputForm\"\nimport hslApiService from \"./services/hslApi\"\nimport \"./EficodeApp.css\"\n\nconst EficodeApp = () => {\n    //https://github.com/eficode/assignment-timetables\n    //https://digitransit.fi/en/developers/apis/1-routing-api/0-graphql/\n    //https://api.digitransit.fi/graphiql/hsl?query=%257B%250A%2520%2520plan%28%250A%2520%2520%2520%2520from%253A%2520%257Blat%253A%252060.168992%252C%2520lon%253A%252024.932366%257D%250A%2520%2520%2520%2520to%253A%2520%257Blat%253A%252060.175294%252C%2520lon%253A%252024.684855%257D%250A%2520%2520%2520%2520numItineraries%253A%25203%250A%2520%2520%29%2520%257B%250A%2520%2520%2520%2520itineraries%2520%257B%250A%2520%2520%2520%2520%2520%2520legs%2520%257B%250A%2520%2520%2520%2520%2520%2520%2520%2520startTime%250A%2520%2520%2520%2520%2520%2520%2520%2520endTime%250A%2520%2520%2520%2520%2520%2520%2520%2520mode%250A%2520%2520%2520%2520%2520%2520%2520%2520duration%250A%2520%2520%2520%2520%2520%2520%2520%2520realTime%250A%2520%2520%2520%2520%2520%2520%2520%2520distance%250A%2520%2520%2520%2520%2520%2520%2520%2520transitLeg%250A%2520%2520%2520%2520%2520%2520%257D%250A%2520%2520%2520%2520%257D%250A%2520%2520%257D%250A%257D\n    //https://repl.it/@digitransit/PolylineDecode\n    //https://repl.it/@digitransit/PolylineDecodeMap\n\n    const [itineraries, setItineraries] = useState()\n    const [location, setLocation] = useState()\n    const [error, setError] = useState()\n    const [key, setKey] = useState(0)\n    const [loading, setLoading] = useState(false)\n\n    const handleItineraries = async (fetchedItineraries) => {\n        if (fetchedItineraries.length > 0) {\n            setKey(0)\n            setItineraries(fetchedItineraries)\n            setError()\n        } else {\n            setItineraries()\n            setError(\"Could not find a route from that location. Try a different one.\")\n        }\n        setLoading(false)\n    }\n\n    const fetchAndHandleItineraries = async (coordinates) => {\n        const fetchedItineraries = await hslApiService.fetchItineraries(coordinates.coords.latitude, coordinates.coords.longitude)\n        handleItineraries(fetchedItineraries)\n    }\n\n    const getItineraries = async (event) => {\n        event.preventDefault()\n        try {\n            setLoading(true)\n            if (!location) {\n                navigator.geolocation.getCurrentPosition(fetchAndHandleItineraries, () => { \n                    setError(\"Could not use location data.\")\n                    setLoading(false)\n                })\n            } else {\n                const coordinates = await hslApiService.getLocationCoordinates(location)\n                console.log(coordinates)\n                fetchAndHandleItineraries(coordinates)\n            }\n        } catch (error) {\n            console.log(error)\n            setItineraries()\n            setLoading(false)\n            setError(\"Could not find a route from that location. Try a different one.\")\n        }\n    }\n\n    return (\n        <div className=\"eficode-root\">\n            {error && <Alert variant=\"primary\">{error}</Alert>}\n            <InputForm setLocation={setLocation} getItineraries={getItineraries} />\n            {loading && <Spinner animation=\"border\" role=\"status\" />}\n            {itineraries && <ItinerariesTab itineraries={itineraries} setKey={setKey} tabKey={key} />}\n        </div >\n    )\n}\n\nexport default EficodeApp","import whistle from \"../../data/whistle.wav\"\n\nlet muted = (localStorage.getItem(\"muted\") && localStorage.getItem(\"muted\") === \"true\")\n    ? true\n    : false\n\nconst setMuted = (newMuted) => {\n    muted = newMuted\n    localStorage.setItem(\"muted\", newMuted)\n}\n\nconst getMuted = () => {\n    return muted\n}\n\nconst playBeep = () => {\n    if (muted) return\n    var snd = new Audio(\"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\n    snd.volume = 0.1\n    snd.play()\n}\n\nconst playWhistle = () => {\n    // credit to: https://freesound.org/people/16GStepankovaS/sounds/499386/\n    if (muted) return\n    var snd = new Audio(whistle)\n    snd.volume = 0.1\n    snd.play()\n}\n\nexport default { playBeep, playWhistle, setMuted, getMuted }\n","import React, { useState } from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport Button from \"react-bootstrap/Button\"\nimport timerService from \"../../../services/timer\"\nimport \"./TimerForm.css\"\n\nconst TimerForm = ({ currentlyResting, sets, timerIsActive, workTime, restTime, setTimeLeft, setWorkTime, setSets, setSetsLeft, setRestTime }) => {\n    const [name, setName] = useState(\"\")\n    const saveAsPreset = () => {\n        const newName = (name && name.trim().length > 0)\n            ? name\n            : \"Preset #\" + (timerService.newIndex() + 1)\n\n        const preset = {\n            index: timerService.newIndex(),\n            name: newName,\n            workTime,\n            restTime,\n            sets\n        }\n        timerService.addPreset(preset)\n        timerService.echo(timerService.getPresets())\n    }\n\n    return (\n        <div className=\"timerform-wrapper\">\n            <div>\n                <h5>Use custom values:</h5>\n                <Form className=\"timerform\" onSubmit={(event) => event.preventDefault()}>\n                    <Form.Group controlId=\"form-sets\">\n                        <Form.Label>Number of Sets</Form.Label>\n                        <Form.Control\n                            disabled={timerIsActive}\n                            type=\"text\"\n                            placeholder=\"# of sets\"\n                            value={sets}\n                            onChange={(event) => {\n                                if (/^\\d+$/.test(event.target.value) || !event.target.value) {\n                                    setSets(Math.max(1, event.target.value))\n                                    setSetsLeft(Math.max(1, event.target.value))\n                                    localStorage.setItem(\"sets\", Math.max(1, event.target.value))\n                                }\n                            }} />\n                        <Form.Text className=\"text-muted\">\n                            The number of sets you want to do.\n                </Form.Text>\n                    </Form.Group>\n                    <Form.Label>Work Time</Form.Label>\n                    <Form.Group controlId=\"form-worktime\">\n                        <Form.Control\n                            disabled={timerIsActive}\n                            type=\"text\"\n                            placeholder=\"Amount of work time per set\"\n                            value={workTime}\n                            onChange={(event) => {\n                                event.target.value = event.target.value.replace(/,/g, '.')\n                                if (/^[0-9]*\\.?[0-9]*$/.test(event.target.value) || !event.target.value) {\n                                    setWorkTime(Math.max(1, event.target.value))\n                                    !currentlyResting && setTimeLeft(Math.max(1, event.target.value))\n                                    localStorage.setItem('workTime', Math.max(1, event.target.value))\n                                }\n                            }} />\n                        <Form.Text className=\"text-muted\">\n                            The number of seconds of exercise per set.\n                </Form.Text>\n                    </Form.Group>\n                    <Form.Group controlId=\"form-resttime\">\n                        <Form.Label>Rest Time</Form.Label>\n                        <Form.Control\n                            disabled={timerIsActive}\n                            type=\"text\"\n                            placeholder=\"Rest time per set\"\n                            value={restTime}\n                            onChange={(event) => {\n                                event.target.value = event.target.value.replace(/,/g, '.')\n                                if (/^[0-9]*\\.?[0-9]*$/.test(event.target.value) || !event.target.value) {\n                                    setRestTime(Math.max(1, event.target.value))\n                                    currentlyResting && setTimeLeft(Math.max(1, event.target.value))\n                                    localStorage.setItem('restTime', Math.max(1, event.target.value))\n                                }\n                            }} />\n                        <Form.Text className=\"text-muted\">\n                            The number of seconds of rest per set.\n                </Form.Text>\n                    </Form.Group>\n                </Form>\n            </div>\n            <div>\n                <h5>Save the custom values as preset</h5>\n                <Form onSubmit={(event) => {\n                    event.preventDefault()\n                    saveAsPreset()\n                }} >\n                    <Form.Group controlId=\"form-presetname\">\n                        <Form.Label>Preset Name</Form.Label>\n                        <Form.Control\n                            disabled={timerIsActive}\n                            type=\"text\"\n                            placeholder=\"Name for the preset\"\n                            value={name}\n                            onChange={(event) => {\n                                setName(event.target.value)\n                            }} />\n                        <Form.Text className=\"text-muted\">\n                            A name for the preset if you want to save one.\n                        </Form.Text>\n                    </Form.Group>\n                    <Button type=\"submit\"> Save as a preset </Button>\n                </Form>\n            </div>\n            <div>\n                <h5>Delete all saved custom presets</h5>\n                <Button variant=\"danger\" onClick={timerService.reset}>Delete custom presets</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default TimerForm\n","import React from \"react\"\nimport \"./TimerInfo.css\"\n\nconst TimerInfo = ({ setsLeft, currentlyResting, timeLeft }) => {\n    return (\n        <div className=\"timerinfo-wrapper\">\n            <table>\n                <tbody>\n                    <tr>\n                        <td>\n                            <strong className=\"timerinfo-strong\">{\"Sets left: \"}</strong>\n                        </td>\n                        <td>\n                            <strong className=\"timerinfo-strong\">{setsLeft}</strong>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <strong className=\"timerinfo-strong\">{currentlyResting ? \"Rest for: \" : \"Exercise for: \"}</strong>\n                        </td>\n                        <td>\n                            <strong className=\"timerinfo-strong\">{timeLeft}</strong>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n        </div >\n    )\n}\n\nexport default TimerInfo\n","import React, { useState } from \"react\"\nimport VolumeOff from '@material-ui/icons/VolumeOff'\nimport VolumeUp from \"@material-ui/icons/VolumeUp\"\nimport soundService from \"../../../services/sound\"\nimport \"./MuteButton.css\"\n\nconst MuteButton = () => {\n    const [muted, setMuted] = useState(soundService.getMuted)\n    const handleMute = () => {\n        setMuted(!muted)\n        soundService.setMuted(!muted)\n    }\n    return (\n        <button className=\"mutebutton\" onClick={handleMute} >\n            { muted ? <VolumeOff /> : <VolumeUp />}\n        </button>\n    )\n}\n\nexport default MuteButton\n","import React from \"react\"\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from \"@material-ui/icons/ExpandMore\"\nimport \"./ShowFormButton.css\"\n\nconst ShowFormButton = ({ showForm, setShowForm }) => {\n    return (\n        <div className=\"showform-wrapper\">\n            <button\n                className='showform-button'\n                onClick={() => setShowForm(!showForm)}>\n                {showForm ? 'Hide' : 'Manage Timer Values'}\n                {showForm ? <ExpandLess /> : <ExpandMore />}\n            </button>\n        </div>\n\n    )\n}\n\nexport default ShowFormButton\n","import React, { useState, useEffect } from \"react\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\nimport timerService from \"../../../services/timer\"\nimport \"./TimerPresets.css\"\n\nconst TimerPresets = ({ timerIsActive, setTimeLeft, setWorkTime, setSets, setSetsLeft, setRestTime }) => {\n    const [presets, setPresets] = useState(timerService.getPresets())\n    useEffect(() => {\n        timerService.subscribeWith(setPresets)\n        return () => timerService.unsubscribe()\n    }, [])\n    return (\n        <>\n            <Dropdown\n                className=\"preset-dropdown\"\n                disabled={timerIsActive}\n                onSelect={(eventKey) => {\n                    const preset = presets[eventKey]\n                    setTimeLeft(preset.workTime)\n                    setRestTime(preset.restTime)\n                    localStorage.setItem('restTime', preset.restTime)\n                    setWorkTime(preset.workTime)\n                    localStorage.setItem('workTime', preset.workTime)\n                    setSetsLeft(preset.sets)\n                    setSets(preset.sets)\n                    localStorage.setItem('sets', preset.sets)\n                }\n                }>\n                <Dropdown.Toggle\n                    disabled={timerIsActive}\n                    variant=\"success\"\n                    id=\"dropdown-basic\">\n                    Select Preset\n            </Dropdown.Toggle>\n                <Dropdown.Menu>\n                    {presets && presets.map(preset => {\n                        return (\n                            <Dropdown.Item key={preset.index} eventKey={preset.index} href=\"#\">\n                                {preset.name}\n                            </Dropdown.Item>\n                        )\n                    })}\n                </Dropdown.Menu>\n            </Dropdown>\n        </>\n    )\n}\n\nexport default TimerPresets\n","import React from \"react\"\nimport Button from \"react-bootstrap/Button\"\nimport TimerPresets from \"../TimerPresets/TimerPresets\"\n\nconst ButtonGroup = ({timerIsActive, setTimeLeft, setWorkTime, setSets, setSetsLeft,setRestTime, setTimerIsActive, timeLeft, setsLeft, workTime, sets}) => {\n\n    const activateTimer = () => {\n        if (timeLeft === 0 && setsLeft === 0) {\n            setTimeLeft(workTime)\n            setSetsLeft(sets)\n        }\n        setTimerIsActive(!timerIsActive)\n    }\n\n    return (\n        <div className=\"timer-buttons\">\n            <TimerPresets timerIsActive={timerIsActive} setTimeLeft={setTimeLeft} setWorkTime={setWorkTime} setSets={setSets} setSetsLeft={setSetsLeft} setRestTime={setRestTime} />\n            <Button className=\"timerform-button\" onClick={activateTimer}>\n                {timerIsActive ? \"Pause timer\" : \"Start Timer\"}\n            </Button>\n        </div>\n    )\n}\n\nexport default ButtonGroup\n","import React, { useState, useEffect, useRef } from \"react\"\nimport soundService from \"../../../services/sound\"\nimport TimerForm from \"../TimerForm/TimerForm\"\nimport TimerInfo from \"../TimerInfo/TimerInfo\"\nimport MuteButton from \"../MuteButton/MuteButton\"\nimport ShowFormButton from \"../ShowFormButton/ShowFormButton\"\nimport ButtonGroup from \"../ButtonGroup/ButtonGroup\"\nimport \"./Timer.css\"\n\nconst Timer = () => {\n    const [sets, setSets] = useState(localStorage.getItem('sets') || 8)\n    const [setsLeft, setSetsLeft] = useState(localStorage.getItem('sets') || 8)\n    const [workTime, setWorkTime] = useState(localStorage.getItem('workTime') || 20)\n    const [restTime, setRestTime] = useState(localStorage.getItem('restTime') || 10)\n    const [timeLeft, setTimeLeft] = useState(localStorage.getItem('workTime') || 20)\n    const [currentlyResting, setCurrentlyResting] = useState(false)\n    const [timerIsActive, setTimerIsActive] = useState(false)\n    const [showForm, setShowForm] = useState(false)\n    const timeoutHandle = useRef()\n    const activeRef = useRef(timerIsActive);\n    activeRef.current = timerIsActive;\n\n    useEffect(() => {\n        const countDown = (timerRefIsActive) => {\n            timerRefIsActive && setTimeLeft(timeLeft - 1)\n        }\n        if (timerIsActive) {\n            if (timeLeft > 0 && setsLeft > 0) {\n                timeoutHandle.current = setTimeout(() => countDown(activeRef.current), 1000)\n            } else if (setsLeft > 1) {\n                soundService.playWhistle()\n                currentlyResting && setTimeout(() => soundService.playWhistle(), 500)\n                currentlyResting && setSetsLeft(setsLeft - 1)\n                currentlyResting\n                    ? setTimeLeft(workTime)\n                    : setTimeLeft(restTime)\n                setCurrentlyResting(!currentlyResting)\n            } else {\n                setTimerIsActive(false)\n                setTimeLeft(0)\n                setSetsLeft(0)\n                soundService.playWhistle()\n                setTimeout(() => soundService.playWhistle(), 750)\n                setTimeout(() => soundService.playWhistle(), 1500)\n            }\n        }\n        return () => {\n            clearTimeout(timeoutHandle.current)\n        }\n    }, [timeLeft, timerIsActive, sets, setsLeft, currentlyResting, restTime, workTime])\n\n    return (\n        <div className=\"timer-wrapper\">\n            <MuteButton />\n            <TimerInfo setsLeft={setsLeft} timeLeft={timeLeft} currentlyResting={currentlyResting} />\n            <ButtonGroup timerIsActive={timerIsActive} setTimeLeft={setTimeLeft} setWorkTime={setWorkTime} setSets={setSets} setSetsLeft={setSetsLeft} setRestTime={setRestTime} setTimerIsActive={setTimerIsActive} timeLeft={timeLeft} setsLeft={setsLeft} workTime={workTime} sets={sets} />\n            <ShowFormButton setShowForm={setShowForm} showForm={showForm} />\n            {showForm && <TimerForm currentlyResting={currentlyResting} timerIsActive={timerIsActive} sets={sets} workTime={workTime} restTime={restTime} setTimeLeft={setTimeLeft} setWorkTime={setWorkTime} setSets={setSets} setSetsLeft={setSetsLeft} setRestTime={setRestTime} />}\n        </div>\n    )\n}\n\nexport default Timer\n","import React from \"react\"\nimport Button from \"react-bootstrap/Button\"\nimport { Link } from \"react-router-dom\"\nimport \"./Menu.css\"\n\nconst Menu = () => {\n    return (\n        <div className=\"menu-wrapper\">\n            <Link to={window.location.pathname === \"/fitness/timer\" ? \"/fitness\" : \"/fitness/timer\"}>\n                <Button>\n                    {window.location.pathname === \"/fitness/timer\" ? \"Close Timer\" : \"Open Timer\"}\n                </Button>\n            </Link>\n            <Link to={window.location.pathname === \"/fitness/weight\" ? \"/fitness\" : \"/fitness/weight\"}>\n                <Button>\n                    {window.location.pathname === \"/fitness/weight\" ? \"Close Training Weight Calculator\" : \"Open Training Weight Calculator\"}\n                </Button>\n            </Link>\n        </div>\n    )\n}\n\nexport default Menu\n","\nconst pound = 0.45359237 // pound in kilos\nconst kg = 2.20462262 // kilo in pounds\n\nconst lbToKgConversion = (weight) => {\n    return weight * pound\n}\n\nconst kgToLbConversion = (weight) => {\n    return weight * kg\n}\n\nconst rounded = (weight) => {\n    return Number(Math.round(weight + \"e1\") + \"e-1\");\n}\n\n\nexport default { lbToKgConversion, kgToLbConversion, rounded }","import React, { useState } from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport InputGroup from \"react-bootstrap/InputGroup\"\nimport weightService from \"../../services/weight\"\nimport \"./WeightCalculator.css\"\n\nconst WeightCalculator = () => {\n    const [kg, setKg] = useState(\"\")\n    const [lb, setLb] = useState(\"\")\n    const [percentage, setPercentage] = useState(\"\")\n    const [max, setMax] = useState(\"\")\n    return (\n        <div className=\"WeightCalculator-wrapper\">\n            <Form className=\"WeightCalculator-form\">\n                <Form.Group controlId=\"converter-kgtolb\">\n                    <Form.Label>Kilograms to pounds</Form.Label>\n                    <InputGroup>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Weight in KG\"\n                            value={kg}\n                            onChange={(event) => {\n                                event.target.value = event.target.value.replace(/,/g, '.')\n                                if (/^[0-9]*\\.?[0-9]*$/.test(event.target.value) || !event.target.value) {\n                                    setKg(event.target.value)\n                                }\n                            }} />\n                        <InputGroup.Append>\n                            <InputGroup.Text>Result:</InputGroup.Text>\n                            <InputGroup.Text>{kg && (weightService.rounded(weightService.kgToLbConversion(kg)))}</InputGroup.Text>\n                            <InputGroup.Text>lb</InputGroup.Text>\n                        </InputGroup.Append>\n                    </InputGroup>\n                    <Form.Text className=\"text-muted\">\n                        Converts kilograms to pounds\n                </Form.Text>\n                </Form.Group>\n                <Form.Group controlId=\"converter-lbtokg\">\n                    <Form.Label>Pounds to Kilograms</Form.Label>\n                    <InputGroup>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Weight in KG\"\n                            value={lb}\n                            onChange={(event) => {\n                                event.target.value = event.target.value.replace(/,/g, '.')\n                                if (/^[0-9]*\\.?[0-9]*$/.test(event.target.value) || !event.target.value) {\n                                    setLb(event.target.value)\n                                }\n                            }} />\n                        <InputGroup.Append>\n                            <InputGroup.Text>Result:</InputGroup.Text>\n                            <InputGroup.Text>{lb && (weightService.rounded(weightService.lbToKgConversion(lb)))}</InputGroup.Text>\n                            <InputGroup.Text>kg</InputGroup.Text>\n                        </InputGroup.Append>\n                    </InputGroup>\n                    <Form.Text className=\"text-muted\">\n                        Converts pounds to kilograms\n                </Form.Text>\n                </Form.Group>\n                <Form.Group controlId=\"converter-percentageofmaximum\">\n                    <Form.Label>Percentage of Maximum</Form.Label>\n                    <InputGroup>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Weight\"\n                            value={max}\n                            onChange={(event) => {\n                                event.target.value = event.target.value.replace(/,/g, '.')\n                                if (/^[0-9]*\\.?[0-9]*$/.test(event.target.value) || !event.target.value) {\n                                    setMax(event.target.value)\n                                }\n                            }} />\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Percentage\"\n                            value={percentage}\n                            onChange={(event) => {\n                                event.target.value = event.target.value.replace(/,/g, '.')\n                                if (/^[0-9]*\\.?[0-9]*$/.test(event.target.value) || !event.target.value) {\n                                    setPercentage(event.target.value)\n                                }\n                            }} />\n                        <InputGroup.Append>\n                            <InputGroup.Text>Result:</InputGroup.Text>\n                            <InputGroup.Text>{(percentage && max) && (weightService.rounded(max / 100 * percentage))}</InputGroup.Text>\n                            <InputGroup.Text>kg/lb</InputGroup.Text>\n                        </InputGroup.Append>\n                    </InputGroup>\n                    <Form.Text className=\"text-muted\">\n                        Calculate the training weight based on a percentage of your maximum. Or vice versa.\n                </Form.Text>\n                </Form.Group>\n            </Form>\n        </div>\n    )\n}\n\nexport default WeightCalculator\n","import React from \"react\"\nimport { Route } from \"react-router-dom\"\nimport Timer from \"./Components/Timer/TimerBase/Timer\"\nimport Menu from \"./Components/Menu/Menu\"\nimport WeightCalculator from \"./Components/WeightCalculator/WeightCalculator\"\n\nconst FitnessApp = () => {\n    return (\n        <>\n            <Menu />\n            <Route exact path=\"/fitness/timer\" render={() => <Timer />} />\n            <Route exact path=\"/fitness/weight\" render={() => <WeightCalculator />} />\n        </>\n    )\n}\n\nexport default FitnessApp\n","import React from 'react'\nimport { Route } from \"react-router-dom\"\nimport WoltApp from \"./Wolt/WoltApp\"\nimport Menu from \"./components/Menu/Menu\"\nimport Front from \"./components/Front/Front\"\nimport EficodeApp from './Eficode/EficodeApp'\nimport FitnessApp from './FitnessApp/FitnessApp'\nimport './App.css'\n\n\n\nfunction App() {\n\n  const components = [\n    {\n      id: 1,\n      name: \"Restaurant Listing App\",\n      description: \"This app displays a restaurant list and allows for sorting alphabetically and rolling a random restaurant from the list. Done as a part of the application process for Wolt's internship.\",\n      path: \"/wolt\"\n    },\n    {\n      id: 2,\n      name: \"Eficode Routing App\",\n      description: \"This app polls the HSL routing API to find you a public transport route from where you are to the Eficode Offices at Pohjoinen Rautatiekatu 25. Done as a part of the application process for Eficode's internship.\",\n      path: \"/eficode\"\n    },\n    {\n      id: 3,\n      name: \"Fitness App\",\n      description: \"A compilation of helpful tools to help you in physical training. Currently includes a timer and a weight calculator. Done as a part of the university course 'Fullstack web sovellus harjoitustyö'. WIP\",\n      path: \"/fitness\"\n    }\n  ]\n\n  return (\n    <>\n      <Menu components={components} />\n      <Route exact path=\"/\" render={() => <Front components={components} />} />\n      <Route exact path=\"/wolt\" render={() => <WoltApp />} />\n      <Route exact path=\"/eficode\" render={() => <EficodeApp />} />\n      <Route path=\"/fitness\" render={() => <FitnessApp />} />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n    <>\n        <Router>\n            <App />\n        </Router>\n    </>\n    ,\n    document.getElementById('root'))","module.exports = __webpack_public_path__ + \"static/media/whistle.5c7b6bcf.wav\";"],"sourceRoot":""}